// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_QuaverBarOption
#include <QuaverBarOption.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c6b45fa2d993ca80_160_new,"QuaverBarOption","new",0xa03dc114,"QuaverBarOption.new","Options.hx",160,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_c6b45fa2d993ca80_166_press,"QuaverBarOption","press",0xab56d937,"QuaverBarOption.press","Options.hx",166,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_c6b45fa2d993ca80_174_updateDisplay,"QuaverBarOption","updateDisplay",0xa4d1e8ed,"QuaverBarOption.updateDisplay","Options.hx",174,0x9d9a0240)

void QuaverBarOption_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_c6b45fa2d993ca80_160_new)
HXLINE( 161)		super::__construct();
HXLINE( 162)		this->description = desc;
            	}

Dynamic QuaverBarOption_obj::__CreateEmpty() { return new QuaverBarOption_obj; }

void *QuaverBarOption_obj::_hx_vtable = 0;

Dynamic QuaverBarOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< QuaverBarOption_obj > _hx_result = new QuaverBarOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool QuaverBarOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1109cc62) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1109cc62;
	} else {
		return inClassId==(int)0x27a70eb9;
	}
}

bool QuaverBarOption_obj::press(){
            	HX_STACKFRAME(&_hx_pos_c6b45fa2d993ca80_166_press)
HXLINE( 167)		::flixel::FlxG_obj::save->data->__SetField(HX_("quaverbar",0d,b0,79,a3),!(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("quaverbar",0d,b0,79,a3),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 168)		this->display = this->updateDisplay();
HXLINE( 169)		return true;
            	}


::String QuaverBarOption_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_c6b45fa2d993ca80_174_updateDisplay)
HXDLIN( 174)		::String _hx_tmp;
HXDLIN( 174)		if (!(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("quaverbar",0d,b0,79,a3),::hx::paccDynamic)) ))) {
HXDLIN( 174)			_hx_tmp = HX_("off",6f,93,54,00);
            		}
            		else {
HXDLIN( 174)			_hx_tmp = HX_("on",1f,61,00,00);
            		}
HXDLIN( 174)		return (HX_("Quaver Bar ",c7,bb,85,88) + _hx_tmp);
            	}



::hx::ObjectPtr< QuaverBarOption_obj > QuaverBarOption_obj::__new(::String desc) {
	::hx::ObjectPtr< QuaverBarOption_obj > __this = new QuaverBarOption_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< QuaverBarOption_obj > QuaverBarOption_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	QuaverBarOption_obj *__this = (QuaverBarOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(QuaverBarOption_obj), true, "QuaverBarOption"));
	*(void **)__this = QuaverBarOption_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

QuaverBarOption_obj::QuaverBarOption_obj()
{
}

::hx::Val QuaverBarOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"press") ) { return ::hx::Val( press_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *QuaverBarOption_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *QuaverBarOption_obj_sStaticStorageInfo = 0;
#endif

static ::String QuaverBarOption_obj_sMemberFields[] = {
	HX_("press",83,53,88,c8),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class QuaverBarOption_obj::__mClass;

void QuaverBarOption_obj::__register()
{
	QuaverBarOption_obj _hx_dummy;
	QuaverBarOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("QuaverBarOption",22,e7,e2,44);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(QuaverBarOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< QuaverBarOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = QuaverBarOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = QuaverBarOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

