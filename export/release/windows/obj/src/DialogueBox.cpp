// Generated by Haxe 4.2.1+bf9ff69
#include <hxcpp.h>

#ifndef INCLUDED_Alphabet
#include <Alphabet.h>
#endif
#ifndef INCLUDED_DialogueBox
#include <DialogueBox.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_text_FlxTypeText
#include <flixel/addons/text/FlxTypeText.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimation
#include <flixel/animation/FlxAnimation.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxBaseAnimation
#include <flixel/animation/FlxBaseAnimation.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_input_FlxBaseKeyList
#include <flixel/input/FlxBaseKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_FlxKeyManager
#include <flixel/input/FlxKeyManager.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyList
#include <flixel/input/keyboard/FlxKeyList.h>
#endif
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyboard
#include <flixel/input/keyboard/FlxKeyboard.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_NumTween
#include <flixel/tweens/misc/NumTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxAxes
#include <flixel/util/FlxAxes.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_media_SoundChannel
#include <openfl/media/SoundChannel.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_72_new,"DialogueBox","new",0x1f391625,"DialogueBox.new","DialogueBox.hx",72,0x0149b4eb)
HX_DEFINE_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_15_new,"DialogueBox","new",0x1f391625,"DialogueBox.new","DialogueBox.hx",15,0x0149b4eb)
static const int _hx_array_data_ffc81fb3_4[] = {
	(int)4,
};
static const int _hx_array_data_ffc81fb3_5[] = {
	(int)4,
};
static const int _hx_array_data_ffc81fb3_6[] = {
	(int)11,
};
static const int _hx_array_data_ffc81fb3_7[] = {
	(int)4,
};
HX_LOCAL_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_296_update,"DialogueBox","update",0x23306964,"DialogueBox.update","DialogueBox.hx",296,0x0149b4eb)
HX_LOCAL_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_340_update,"DialogueBox","update",0x23306964,"DialogueBox.update","DialogueBox.hx",340,0x0149b4eb)
HX_LOCAL_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_350_update,"DialogueBox","update",0x23306964,"DialogueBox.update","DialogueBox.hx",350,0x0149b4eb)
HX_LOCAL_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_369_startDialogue,"DialogueBox","startDialogue",0x59859d9f,"DialogueBox.startDialogue","DialogueBox.hx",369,0x0149b4eb)
HX_LOCAL_STACK_FRAME(_hx_pos_abff9fa8c13cc7a0_700_cleanDialog,"DialogueBox","cleanDialog",0x0fc249f6,"DialogueBox.cleanDialog","DialogueBox.hx",700,0x0149b4eb)

void DialogueBox_obj::__construct(::hx::Null< bool >  __o_talkingRight,::Array< ::String > dialogueList){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::DialogueBox,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::util::FlxTimer tmr){
            			HX_GC_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_72_new)
HXLINE(  73)			 ::flixel::FlxSprite fh = _gthis->bgFade;
HXDLIN(  73)			fh->set_alpha((fh->alpha + ((Float)0.13999999999999999)));
HXLINE(  74)			if ((_gthis->bgFade->alpha > ((Float)0.7))) {
HXLINE(  75)				_gthis->bgFade->set_alpha(((Float)0.7));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		bool talkingRight = __o_talkingRight.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_15_new)
HXLINE( 366)		this->isEnding = false;
HXLINE( 293)		this->dialogueStarted = false;
HXLINE( 292)		this->dialogueOpened = false;
HXLINE(  22)		this->dialogueList = ::Array_obj< ::String >::__new(0);
HXLINE(  19)		this->curCharacter = HX_("",00,00,00,00);
HXLINE(  53)		 ::DialogueBox _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  54)		super::__construct(null(),null(),null());
HXLINE(  56)		::String _hx_switch_0 = ( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase();
            		if (  (_hx_switch_0==HX_("senpai",3c,df,8d,6b)) ){
HXLINE(  59)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN(  59)			::String library = null();
HXDLIN(  59)			_hx_tmp->playMusic(::Paths_obj::getPath((((HX_("music/",ea,bf,1b,3f) + HX_("Lunchbox",c1,34,3f,3d)) + HX_(".",2e,00,00,00)) + HX_("ogg",4f,94,54,00)),HX_("MUSIC",85,08,49,8e),library),0,null(),null());
HXLINE(  60)			{
HXLINE(  60)				 ::flixel::_hx_system::FlxSound _this = ::flixel::FlxG_obj::sound->music;
HXDLIN(  60)				 ::Dynamic onComplete = null();
HXDLIN(  60)				if (::hx::IsNull( _this->_channel )) {
HXLINE(  60)					_this->play(null(),null(),null());
            				}
HXDLIN(  60)				if (::hx::IsNotNull( _this->fadeTween )) {
HXLINE(  60)					_this->fadeTween->cancel();
            				}
HXDLIN(  60)				_this->fadeTween = ::flixel::tweens::FlxTween_obj::num(( (Float)(0) ),((Float)0.8),1, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("onComplete",f8,d4,7e,5d),onComplete)),_this->volumeTween_dyn());
            			}
HXLINE(  58)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("thorns",9c,bf,c7,8c)) ){
HXLINE(  62)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN(  62)			::String library = null();
HXDLIN(  62)			_hx_tmp->playMusic(::Paths_obj::getPath((((HX_("music/",ea,bf,1b,3f) + HX_("LunchboxScary",57,33,01,24)) + HX_(".",2e,00,00,00)) + HX_("ogg",4f,94,54,00)),HX_("MUSIC",85,08,49,8e),library),0,null(),null());
HXLINE(  63)			{
HXLINE(  63)				 ::flixel::_hx_system::FlxSound _this = ::flixel::FlxG_obj::sound->music;
HXDLIN(  63)				 ::Dynamic onComplete = null();
HXDLIN(  63)				if (::hx::IsNull( _this->_channel )) {
HXLINE(  63)					_this->play(null(),null(),null());
            				}
HXDLIN(  63)				if (::hx::IsNotNull( _this->fadeTween )) {
HXLINE(  63)					_this->fadeTween->cancel();
            				}
HXDLIN(  63)				_this->fadeTween = ::flixel::tweens::FlxTween_obj::num(( (Float)(0) ),((Float)0.8),1, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("onComplete",f8,d4,7e,5d),onComplete)),_this->volumeTween_dyn());
            			}
HXLINE(  61)			goto _hx_goto_0;
            		}
            		_hx_goto_0:;
HXLINE(  66)		 ::flixel::FlxSprite _hx_tmp =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-200,-200,null());
HXDLIN(  66)		int _hx_tmp1 = ::Std_obj::_hx_int((( (Float)(::flixel::FlxG_obj::width) ) * ((Float)1.3)));
HXDLIN(  66)		this->bgFade = _hx_tmp->makeGraphic(_hx_tmp1,::Std_obj::_hx_int((( (Float)(::flixel::FlxG_obj::height) ) * ((Float)1.3))),-4988968,null(),null());
HXLINE(  67)		this->bgFade->scrollFactor->set(null(),null());
HXLINE(  68)		this->bgFade->set_alpha(( (Float)(0) ));
HXLINE(  69)		this->add(this->bgFade);
HXLINE(  71)		 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.83), ::Dynamic(new _hx_Closure_0(_gthis)),5);
HXLINE(  78)		this->box =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,45,null());
HXLINE(  80)		bool hasDialog = false;
HXLINE(  81)		::String _hx_switch_1 = ( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase();
            		if (  (_hx_switch_1==HX_("roses",04,6c,64,ed)) ){
HXLINE(  89)			hasDialog = true;
HXLINE(  90)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN(  90)			_hx_tmp->play(::Paths_obj::sound(HX_("ANGRY_TEXT_BOX",57,5c,5c,19),null()),null(),null(),null(),null(),null());
HXLINE(  92)			 ::flixel::FlxSprite _hx_tmp1 = this->box;
HXDLIN(  92)			::String library = null();
HXDLIN(  92)			::String _hx_tmp2 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-senpaiMad",61,55,ee,84)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  92)			_hx_tmp1->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp2,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-senpaiMad",61,55,ee,84)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  93)			this->box->animation->addByPrefix(HX_("normalOpen",91,41,38,70),HX_("SENPAI ANGRY IMPACT SPEECH",f9,17,39,87),24,false,null(),null());
HXLINE(  94)			this->box->animation->addByIndices(HX_("normal",27,72,69,30),HX_("SENPAI ANGRY IMPACT SPEECH",f9,17,39,87),::Array_obj< int >::fromData( _hx_array_data_ffc81fb3_4,1),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE(  88)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("senpai",3c,df,8d,6b)) ){
HXLINE(  84)			hasDialog = true;
HXLINE(  85)			 ::flixel::FlxSprite _hx_tmp = this->box;
HXDLIN(  85)			::String library = null();
HXDLIN(  85)			::String _hx_tmp1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-pixel",b3,f0,21,da)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  85)			_hx_tmp->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp1,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-pixel",b3,f0,21,da)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  86)			this->box->animation->addByPrefix(HX_("normalOpen",91,41,38,70),HX_("Text Box Appear",bd,48,54,1a),24,false,null(),null());
HXLINE(  87)			this->box->animation->addByIndices(HX_("normal",27,72,69,30),HX_("Text Box Appear",bd,48,54,1a),::Array_obj< int >::fromData( _hx_array_data_ffc81fb3_5,1),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE(  83)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_1==HX_("thorns",9c,bf,c7,8c)) ){
HXLINE(  97)			hasDialog = true;
HXLINE(  98)			 ::flixel::FlxSprite _hx_tmp = this->box;
HXDLIN(  98)			::String library = null();
HXDLIN(  98)			::String _hx_tmp1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-evil",07,6d,f9,cc)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  98)			_hx_tmp->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp1,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/dialogueBox-evil",07,6d,f9,cc)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE(  99)			this->box->animation->addByPrefix(HX_("normalOpen",91,41,38,70),HX_("Spirit Textbox spawn",ea,ee,35,84),24,false,null(),null());
HXLINE( 100)			this->box->animation->addByIndices(HX_("normal",27,72,69,30),HX_("Spirit Textbox spawn",ea,ee,35,84),::Array_obj< int >::fromData( _hx_array_data_ffc81fb3_6,1),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE( 102)			 ::flixel::FlxSprite face =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,320,170,null());
HXDLIN( 102)			::String library1 = null();
HXDLIN( 102)			 ::flixel::FlxSprite face1 = face->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/spiritFaceForward",93,1c,29,2a)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1),null(),null(),null(),null(),null());
HXLINE( 103)			face1->setGraphicSize(::Std_obj::_hx_int((face1->get_width() * ( (Float)(6) ))),null());
HXLINE( 104)			this->add(face1);
HXLINE(  96)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE( 107)			hasDialog = true;
HXLINE( 108)			 ::flixel::FlxSprite _hx_tmp = this->box;
HXDLIN( 108)			::String _hx_tmp1 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("speech_bubble_talking",00,7d,a2,c5)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 108)			_hx_tmp->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp1,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("speech_bubble_talking",00,7d,a2,c5)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 109)			this->box->animation->addByPrefix(HX_("normalOpen",91,41,38,70),HX_("Speech Bubble Normal Open",0d,59,3f,7c),24,false,null(),null());
HXLINE( 110)			this->box->animation->addByIndices(HX_("normal",27,72,69,30),HX_("speech bubble normal",bd,d5,bc,a7),::Array_obj< int >::fromData( _hx_array_data_ffc81fb3_7,1),HX_("",00,00,00,00),24,null(),null(),null());
HXLINE( 111)			this->box->set_width(( (Float)(200) ));
HXLINE( 112)			this->box->set_height(( (Float)(100) ));
HXLINE( 113)			this->box->set_x(( (Float)(-100) ));
HXLINE( 114)			this->box->set_y(( (Float)(375) ));
HXLINE( 115)			this->box->set_flipX(true);
            		}
            		_hx_goto_1:;
HXLINE( 118)		this->dialogueList = dialogueList;
HXLINE( 120)		if (!(hasDialog)) {
HXLINE( 121)			return;
            		}
HXLINE( 123)		this->portraitLeft =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 124)		 ::flixel::FlxSprite _hx_tmp2 = this->portraitLeft;
HXDLIN( 124)		::String library = null();
HXDLIN( 124)		::String _hx_tmp3 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/senpaiPortrait",9b,ed,4f,6d)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN( 124)		_hx_tmp2->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp3,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/senpaiPortrait",9b,ed,4f,6d)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library)));
HXLINE( 125)		this->portraitLeft->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Senpai Portrait Enter",d7,e0,09,14),24,false,null(),null());
HXLINE( 126)		 ::flixel::FlxSprite _hx_tmp4 = this->portraitLeft;
HXDLIN( 126)		Float _hx_tmp5 = this->portraitLeft->get_width();
HXDLIN( 126)		_hx_tmp4->setGraphicSize(::Std_obj::_hx_int(((_hx_tmp5 * ::PlayState_obj::daPixelZoom) * ((Float)0.9))),null());
HXLINE( 127)		this->portraitLeft->updateHitbox();
HXLINE( 128)		this->portraitLeft->scrollFactor->set(null(),null());
HXLINE( 129)		this->add(this->portraitLeft);
HXLINE( 130)		this->portraitLeft->set_visible(false);
HXLINE( 132)		this->portraitRight =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,0,40,null());
HXLINE( 133)		 ::flixel::FlxSprite _hx_tmp6 = this->portraitRight;
HXDLIN( 133)		::String library1 = null();
HXDLIN( 133)		::String _hx_tmp7 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/bfPortrait",23,ea,7a,a3)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library1);
HXDLIN( 133)		_hx_tmp6->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp7,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/bfPortrait",23,ea,7a,a3)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library1)));
HXLINE( 134)		this->portraitRight->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Boyfriend portrait enter",a9,02,f8,de),24,false,null(),null());
HXLINE( 135)		 ::flixel::FlxSprite _hx_tmp8 = this->portraitRight;
HXDLIN( 135)		Float _hx_tmp9 = this->portraitRight->get_width();
HXDLIN( 135)		_hx_tmp8->setGraphicSize(::Std_obj::_hx_int(((_hx_tmp9 * ::PlayState_obj::daPixelZoom) * ((Float)0.9))),null());
HXLINE( 136)		this->portraitRight->updateHitbox();
HXLINE( 137)		this->portraitRight->scrollFactor->set(null(),null());
HXLINE( 138)		this->add(this->portraitRight);
HXLINE( 139)		this->portraitRight->set_visible(false);
HXLINE( 141)		this->gfportrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 142)		 ::flixel::FlxSprite _hx_tmp10 = this->gfportrait;
HXDLIN( 142)		::String _hx_tmp11 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/gfPortrait",f1,87,8f,80)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 142)		_hx_tmp10->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp11,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/gfPortrait",f1,87,8f,80)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 143)		this->gfportrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 145)		this->gfportrait->updateHitbox();
HXLINE( 146)		this->gfportrait->scrollFactor->set(null(),null());
HXLINE( 147)		this->add(this->gfportrait);
HXLINE( 148)		this->gfportrait->set_visible(false);
HXLINE( 150)		this->bfportrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 151)		 ::flixel::FlxSprite _hx_tmp12 = this->bfportrait;
HXDLIN( 151)		::String _hx_tmp13 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/boyfriendPortrait",6e,d0,30,16)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 151)		_hx_tmp12->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp13,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/boyfriendPortrait",6e,d0,30,16)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 152)		this->bfportrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 154)		this->bfportrait->updateHitbox();
HXLINE( 155)		this->bfportrait->scrollFactor->set(null(),null());
HXLINE( 156)		this->add(this->bfportrait);
HXLINE( 157)		this->bfportrait->set_visible(false);
HXLINE( 159)		this->dadPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 160)		 ::flixel::FlxSprite _hx_tmp14 = this->dadPortrait;
HXDLIN( 160)		::String _hx_tmp15 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/dadPortrait",8b,c5,44,2f)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 160)		_hx_tmp14->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp15,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/dadPortrait",8b,c5,44,2f)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 161)		this->dadPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 163)		this->dadPortrait->updateHitbox();
HXLINE( 164)		this->dadPortrait->scrollFactor->set(null(),null());
HXLINE( 165)		this->add(this->dadPortrait);
HXLINE( 166)		this->dadPortrait->set_visible(false);
HXLINE( 168)		this->pumpPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 169)		 ::flixel::FlxSprite _hx_tmp16 = this->pumpPortrait;
HXDLIN( 169)		::String _hx_tmp17 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/pumpPortrait",3a,af,7d,6f)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 169)		_hx_tmp16->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp17,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/pumpPortrait",3a,af,7d,6f)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 170)		this->pumpPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 172)		this->pumpPortrait->updateHitbox();
HXLINE( 173)		this->pumpPortrait->scrollFactor->set(null(),null());
HXLINE( 174)		this->add(this->pumpPortrait);
HXLINE( 175)		this->pumpPortrait->set_visible(false);
HXLINE( 177)		this->skidPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 178)		 ::flixel::FlxSprite _hx_tmp18 = this->skidPortrait;
HXDLIN( 178)		::String _hx_tmp19 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/skidPortrait",05,fc,90,47)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 178)		_hx_tmp18->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp19,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/skidPortrait",05,fc,90,47)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 179)		this->skidPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 181)		this->skidPortrait->updateHitbox();
HXLINE( 182)		this->skidPortrait->scrollFactor->set(null(),null());
HXLINE( 183)		this->add(this->skidPortrait);
HXLINE( 184)		this->skidPortrait->set_visible(false);
HXLINE( 186)		this->picoPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 187)		 ::flixel::FlxSprite _hx_tmp20 = this->picoPortrait;
HXDLIN( 187)		::String _hx_tmp21 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/picoPortrait",77,90,36,0f)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 187)		_hx_tmp20->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp21,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/picoPortrait",77,90,36,0f)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 188)		this->picoPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 190)		this->picoPortrait->updateHitbox();
HXLINE( 191)		this->picoPortrait->scrollFactor->set(null(),null());
HXLINE( 192)		this->add(this->picoPortrait);
HXLINE( 193)		this->picoPortrait->set_visible(false);
HXLINE( 195)		this->pico2Portrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 196)		 ::flixel::FlxSprite _hx_tmp22 = this->pico2Portrait;
HXDLIN( 196)		::String _hx_tmp23 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/picoAngryPortrait",00,fb,76,de)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 196)		_hx_tmp22->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp23,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/picoAngryPortrait",00,fb,76,de)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 197)		this->pico2Portrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 199)		this->pico2Portrait->updateHitbox();
HXLINE( 200)		this->pico2Portrait->scrollFactor->set(null(),null());
HXLINE( 201)		this->add(this->pico2Portrait);
HXLINE( 202)		this->pico2Portrait->set_visible(false);
HXLINE( 204)		this->gf2Portrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 205)		 ::flixel::FlxSprite _hx_tmp24 = this->gf2Portrait;
HXDLIN( 205)		::String _hx_tmp25 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/gfCheerPortrait",b2,46,ae,f2)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 205)		_hx_tmp24->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp25,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/gfCheerPortrait",b2,46,ae,f2)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 206)		this->gf2Portrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 208)		this->gf2Portrait->updateHitbox();
HXLINE( 209)		this->gf2Portrait->scrollFactor->set(null(),null());
HXLINE( 210)		this->add(this->gf2Portrait);
HXLINE( 211)		this->gf2Portrait->set_visible(false);
HXLINE( 213)		this->momPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 214)		 ::flixel::FlxSprite _hx_tmp26 = this->momPortrait;
HXDLIN( 214)		::String _hx_tmp27 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/momPortrait",0f,ca,a5,a5)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 214)		_hx_tmp26->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp27,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/momPortrait",0f,ca,a5,a5)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 215)		this->momPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 217)		this->momPortrait->updateHitbox();
HXLINE( 218)		this->momPortrait->scrollFactor->set(null(),null());
HXLINE( 219)		this->add(this->momPortrait);
HXLINE( 220)		this->momPortrait->set_visible(false);
HXLINE( 222)		this->parentsMomPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 223)		 ::flixel::FlxSprite _hx_tmp28 = this->parentsMomPortrait;
HXDLIN( 223)		::String _hx_tmp29 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsMomPortrait",14,72,b3,39)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 223)		_hx_tmp28->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp29,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsMomPortrait",14,72,b3,39)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 224)		this->parentsMomPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 226)		this->parentsMomPortrait->updateHitbox();
HXLINE( 227)		this->parentsMomPortrait->scrollFactor->set(null(),null());
HXLINE( 228)		this->add(this->parentsMomPortrait);
HXLINE( 229)		this->parentsMomPortrait->set_visible(false);
HXLINE( 231)		this->parentsDadPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 232)		 ::flixel::FlxSprite _hx_tmp30 = this->parentsDadPortrait;
HXDLIN( 232)		::String _hx_tmp31 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsDadPortrait",90,6d,52,c3)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 232)		_hx_tmp30->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp31,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsDadPortrait",90,6d,52,c3)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 233)		this->parentsDadPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 235)		this->parentsDadPortrait->updateHitbox();
HXLINE( 236)		this->parentsDadPortrait->scrollFactor->set(null(),null());
HXLINE( 237)		this->add(this->parentsDadPortrait);
HXLINE( 238)		this->parentsDadPortrait->set_visible(false);
HXLINE( 240)		this->parentsPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 241)		 ::flixel::FlxSprite _hx_tmp32 = this->parentsPortrait;
HXDLIN( 241)		::String _hx_tmp33 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsPortrait",cd,39,5d,0a)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 241)		_hx_tmp32->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp33,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/parentsPortrait",cd,39,5d,0a)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 242)		this->parentsPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 244)		this->parentsPortrait->updateHitbox();
HXLINE( 245)		this->parentsPortrait->scrollFactor->set(null(),null());
HXLINE( 246)		this->add(this->parentsPortrait);
HXLINE( 247)		this->parentsPortrait->set_visible(false);
HXLINE( 249)		this->monsterPortrait =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,-20,40,null());
HXLINE( 250)		 ::flixel::FlxSprite _hx_tmp34 = this->monsterPortrait;
HXDLIN( 250)		::String _hx_tmp35 = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/christmasLemonPortrait",63,db,65,dd)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),HX_("shared",a5,5e,2b,1d));
HXDLIN( 250)		_hx_tmp34->set_frames(::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp35,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Portraits/christmasLemonPortrait",63,db,65,dd)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),HX_("shared",a5,5e,2b,1d))));
HXLINE( 251)		this->monsterPortrait->animation->addByPrefix(HX_("enter",18,6d,86,70),HX_("Portrait Enter instance",c2,80,da,6d),24,false,null(),null());
HXLINE( 253)		this->monsterPortrait->updateHitbox();
HXLINE( 254)		this->monsterPortrait->scrollFactor->set(null(),null());
HXLINE( 255)		this->add(this->monsterPortrait);
HXLINE( 256)		this->monsterPortrait->set_visible(false);
HXLINE( 259)		this->box->animation->play(HX_("normalOpen",91,41,38,70),null(),null(),null());
HXLINE( 260)		 ::flixel::FlxSprite _hx_tmp36 = this->box;
HXDLIN( 260)		Float _hx_tmp37 = this->box->get_width();
HXDLIN( 260)		_hx_tmp36->setGraphicSize(::Std_obj::_hx_int(((_hx_tmp37 * ::PlayState_obj::daPixelZoom) * ((Float)0.9))),null());
HXLINE( 261)		this->box->updateHitbox();
HXLINE( 262)		this->add(this->box);
HXLINE( 264)		{
HXLINE( 264)			 ::flixel::FlxSprite _this = this->box;
HXDLIN( 264)			 ::flixel::util::FlxAxes axes = ::flixel::util::FlxAxes_obj::X_dyn();
HXDLIN( 264)			if (::hx::IsNull( axes )) {
HXLINE( 264)				axes = ::flixel::util::FlxAxes_obj::XY_dyn();
            			}
HXDLIN( 264)			bool _hx_tmp38;
HXDLIN( 264)			switch((int)(axes->_hx_getIndex())){
            				case (int)0: case (int)2: {
HXLINE( 264)					_hx_tmp38 = true;
            				}
            				break;
            				default:{
HXLINE( 264)					_hx_tmp38 = false;
            				}
            			}
HXDLIN( 264)			if (_hx_tmp38) {
HXLINE( 264)				int _hx_tmp = ::flixel::FlxG_obj::width;
HXDLIN( 264)				_this->set_x(((( (Float)(_hx_tmp) ) - _this->get_width()) / ( (Float)(2) )));
            			}
HXDLIN( 264)			bool _hx_tmp39;
HXDLIN( 264)			switch((int)(axes->_hx_getIndex())){
            				case (int)1: case (int)2: {
HXLINE( 264)					_hx_tmp39 = true;
            				}
            				break;
            				default:{
HXLINE( 264)					_hx_tmp39 = false;
            				}
            			}
HXDLIN( 264)			if (_hx_tmp39) {
HXLINE( 264)				int _hx_tmp = ::flixel::FlxG_obj::height;
HXDLIN( 264)				_this->set_y(((( (Float)(_hx_tmp) ) - _this->get_height()) / ( (Float)(2) )));
            			}
            		}
HXLINE( 265)		{
HXLINE( 265)			 ::flixel::FlxSprite _this1 = this->portraitLeft;
HXDLIN( 265)			 ::flixel::util::FlxAxes axes1 = ::flixel::util::FlxAxes_obj::X_dyn();
HXDLIN( 265)			if (::hx::IsNull( axes1 )) {
HXLINE( 265)				axes1 = ::flixel::util::FlxAxes_obj::XY_dyn();
            			}
HXDLIN( 265)			bool _hx_tmp40;
HXDLIN( 265)			switch((int)(axes1->_hx_getIndex())){
            				case (int)0: case (int)2: {
HXLINE( 265)					_hx_tmp40 = true;
            				}
            				break;
            				default:{
HXLINE( 265)					_hx_tmp40 = false;
            				}
            			}
HXDLIN( 265)			if (_hx_tmp40) {
HXLINE( 265)				int _hx_tmp = ::flixel::FlxG_obj::width;
HXDLIN( 265)				_this1->set_x(((( (Float)(_hx_tmp) ) - _this1->get_width()) / ( (Float)(2) )));
            			}
HXDLIN( 265)			bool _hx_tmp41;
HXDLIN( 265)			switch((int)(axes1->_hx_getIndex())){
            				case (int)1: case (int)2: {
HXLINE( 265)					_hx_tmp41 = true;
            				}
            				break;
            				default:{
HXLINE( 265)					_hx_tmp41 = false;
            				}
            			}
HXDLIN( 265)			if (_hx_tmp41) {
HXLINE( 265)				int _hx_tmp = ::flixel::FlxG_obj::height;
HXDLIN( 265)				_this1->set_y(((( (Float)(_hx_tmp) ) - _this1->get_height()) / ( (Float)(2) )));
            			}
            		}
HXLINE( 267)		 ::flixel::FlxSprite _hx_tmp42 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,(( (Float)(::flixel::FlxG_obj::width) ) * ((Float)0.9)),(( (Float)(::flixel::FlxG_obj::height) ) * ((Float)0.9)),null());
HXDLIN( 267)		::String library2 = null();
HXDLIN( 267)		this->handSelect = _hx_tmp42->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("weeb/pixelUI/hand_textbox",67,1b,cd,60)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library2),null(),null(),null(),null(),null());
HXLINE( 268)		this->add(this->handSelect);
HXLINE( 271)		bool _hx_tmp43 = !(talkingRight);
HXLINE( 276)		this->dropText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,242,502,::Std_obj::_hx_int((( (Float)(::flixel::FlxG_obj::width) ) * ((Float)0.6))),HX_("",00,00,00,00),32,null());
HXLINE( 277)		this->dropText->set_font(HX_("Pixel Arial 11 Bold",ae,17,c6,45));
HXLINE( 278)		this->dropText->set_color(-2583404);
HXLINE( 279)		this->add(this->dropText);
HXLINE( 281)		this->swagDialogue =  ::flixel::addons::text::FlxTypeText_obj::__alloc( HX_CTX ,( (Float)(240) ),( (Float)(500) ),::Std_obj::_hx_int((( (Float)(::flixel::FlxG_obj::width) ) * ((Float)0.6))),HX_("",00,00,00,00),32,null());
HXLINE( 282)		this->swagDialogue->set_font(HX_("Pixel Arial 11 Bold",ae,17,c6,45));
HXLINE( 283)		this->swagDialogue->set_color(-12640223);
HXLINE( 284)		 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp44 = ::flixel::FlxG_obj::sound;
HXDLIN( 284)		 ::flixel::_hx_system::FlxSound _hx_tmp45 = _hx_tmp44->load(::Paths_obj::sound(HX_("pixelText",53,7a,83,06),null()),((Float)0.6),null(),null(),null(),null(),null(),null(),null());
HXDLIN( 284)		this->swagDialogue->sounds = ::Array_obj< ::Dynamic>::__new(1)->init(0,_hx_tmp45);
HXLINE( 285)		this->add(this->swagDialogue);
HXLINE( 287)		this->dialogue =  ::Alphabet_obj::__alloc( HX_CTX ,( (Float)(0) ),( (Float)(80) ),HX_("",00,00,00,00),false,true);
            	}

Dynamic DialogueBox_obj::__CreateEmpty() { return new DialogueBox_obj; }

void *DialogueBox_obj::_hx_vtable = 0;

Dynamic DialogueBox_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DialogueBox_obj > _hx_result = new DialogueBox_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool DialogueBox_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x04b35cb7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x04b35cb7;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void DialogueBox_obj::update(Float elapsed){
            	HX_GC_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_296_update)
HXDLIN( 296)		 ::DialogueBox _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 298)		if ((( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() == HX_("roses",04,6c,64,ed))) {
HXLINE( 299)			this->portraitLeft->set_visible(false);
            		}
HXLINE( 300)		if ((( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() == HX_("thorns",9c,bf,c7,8c))) {
HXLINE( 302)			this->portraitLeft->set_color(-16777216);
HXLINE( 303)			this->swagDialogue->set_color(-1);
HXLINE( 304)			this->dropText->set_color(-16777216);
            		}
HXLINE( 307)		this->dropText->set_text(this->swagDialogue->text);
HXLINE( 309)		if (::hx::IsNotNull( this->box->animation->_curAnim )) {
HXLINE( 311)			bool _hx_tmp;
HXDLIN( 311)			if ((this->box->animation->_curAnim->name == HX_("normalOpen",91,41,38,70))) {
HXLINE( 311)				_hx_tmp = this->box->animation->_curAnim->finished;
            			}
            			else {
HXLINE( 311)				_hx_tmp = false;
            			}
HXDLIN( 311)			if (_hx_tmp) {
HXLINE( 313)				this->box->animation->play(HX_("normal",27,72,69,30),null(),null(),null());
HXLINE( 314)				this->dialogueOpened = true;
            			}
            		}
HXLINE( 318)		bool _hx_tmp;
HXDLIN( 318)		if (this->dialogueOpened) {
HXLINE( 318)			_hx_tmp = !(this->dialogueStarted);
            		}
            		else {
HXLINE( 318)			_hx_tmp = false;
            		}
HXDLIN( 318)		if (_hx_tmp) {
HXLINE( 320)			this->startDialogue();
HXLINE( 321)			this->dialogueStarted = true;
            		}
HXLINE( 324)		bool _hx_tmp1;
HXDLIN( 324)		if (( ( ::flixel::input::FlxBaseKeyList)(::flixel::FlxG_obj::keys->justPressed) )->get_ANY()) {
HXLINE( 324)			_hx_tmp1 = (this->dialogueStarted == true);
            		}
            		else {
HXLINE( 324)			_hx_tmp1 = false;
            		}
HXDLIN( 324)		if (_hx_tmp1) {
HXLINE( 326)			this->remove(this->dialogue,null());
HXLINE( 328)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 328)			_hx_tmp->play(::Paths_obj::sound(HX_("clickText",15,39,f9,2b),null()),((Float)0.8),null(),null(),null(),null());
HXLINE( 330)			bool _hx_tmp1;
HXDLIN( 330)			if (::hx::IsNull( this->dialogueList->__get(1) )) {
HXLINE( 330)				_hx_tmp1 = ::hx::IsNotNull( this->dialogueList->__get(0) );
            			}
            			else {
HXLINE( 330)				_hx_tmp1 = false;
            			}
HXDLIN( 330)			if (_hx_tmp1) {
HXLINE( 332)				if (!(this->isEnding)) {
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::DialogueBox,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::util::FlxTimer tmr){
            						HX_GC_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_340_update)
HXLINE( 341)						 ::flixel::FlxSprite fh = _gthis->box;
HXDLIN( 341)						fh->set_alpha((fh->alpha - ((Float)0.2)));
HXLINE( 342)						 ::flixel::FlxSprite fh1 = _gthis->bgFade;
HXDLIN( 342)						fh1->set_alpha((fh1->alpha - ((Float)0.13999999999999999)));
HXLINE( 343)						_gthis->portraitLeft->set_visible(false);
HXLINE( 344)						_gthis->portraitRight->set_visible(false);
HXLINE( 345)						 ::flixel::addons::text::FlxTypeText fh2 = _gthis->swagDialogue;
HXDLIN( 345)						fh2->set_alpha((fh2->alpha - ((Float)0.2)));
HXLINE( 346)						_gthis->dropText->set_alpha(_gthis->swagDialogue->alpha);
            					}
            					HX_END_LOCAL_FUNC1((void))

            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::DialogueBox,_gthis) HXARGC(1)
            					void _hx_run( ::flixel::util::FlxTimer tmr){
            						HX_GC_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_350_update)
HXLINE( 351)						_gthis->finishThing();
HXLINE( 352)						_gthis->kill();
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE( 334)					this->isEnding = true;
HXLINE( 336)					bool _hx_tmp;
HXDLIN( 336)					if ((( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() != HX_("senpai",3c,df,8d,6b))) {
HXLINE( 336)						_hx_tmp = (( (::String)(::PlayState_obj::SONG->__Field(HX_("song",d5,23,58,4c),::hx::paccDynamic)) ).toLowerCase() == HX_("thorns",9c,bf,c7,8c));
            					}
            					else {
HXLINE( 336)						_hx_tmp = true;
            					}
HXDLIN( 336)					if (_hx_tmp) {
HXLINE( 337)						 ::flixel::_hx_system::FlxSound _this = ::flixel::FlxG_obj::sound->music;
HXDLIN( 337)						 ::Dynamic To = 0;
HXDLIN( 337)						 ::Dynamic onComplete = null();
HXDLIN( 337)						if (::hx::IsNull( To )) {
HXLINE( 337)							To = 0;
            						}
HXDLIN( 337)						if (::hx::IsNotNull( _this->fadeTween )) {
HXLINE( 337)							_this->fadeTween->cancel();
            						}
HXDLIN( 337)						_this->fadeTween = ::flixel::tweens::FlxTween_obj::num(_this->_volume,( (Float)(To) ),((Float)2.2), ::Dynamic(::hx::Anon_obj::Create(1)
            							->setFixed(0,HX_("onComplete",f8,d4,7e,5d),onComplete)),_this->volumeTween_dyn());
            					}
HXLINE( 339)					 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_0(_gthis)),5);
HXLINE( 349)					 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)1.2), ::Dynamic(new _hx_Closure_1(_gthis)),null());
            				}
            			}
            			else {
HXLINE( 358)				this->dialogueList->remove(this->dialogueList->__get(0));
HXLINE( 359)				this->startDialogue();
            			}
            		}
HXLINE( 363)		this->super::update(elapsed);
            	}


void DialogueBox_obj::startDialogue(){
            	HX_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_369_startDialogue)
HXLINE( 370)		this->cleanDialog();
HXLINE( 376)		this->swagDialogue->resetText(this->dialogueList->__get(0));
HXLINE( 377)		this->swagDialogue->start(((Float)0.04),true,null(),null(),null());
HXLINE( 379)		::String _hx_switch_0 = this->curCharacter;
            		if (  (_hx_switch_0==HX_("bf",c4,55,00,00)) ){
HXLINE( 403)			this->monsterPortrait->set_visible(false);
HXLINE( 404)			this->parentsPortrait->set_visible(false);
HXLINE( 405)			this->parentsMomPortrait->set_visible(false);
HXLINE( 406)			this->parentsDadPortrait->set_visible(false);
HXLINE( 407)			this->momPortrait->set_visible(false);
HXLINE( 408)			this->gf2Portrait->set_visible(false);
HXLINE( 409)			this->pico2Portrait->set_visible(false);
HXLINE( 410)			this->picoPortrait->set_visible(false);
HXLINE( 411)			this->pumpPortrait->set_visible(false);
HXLINE( 412)			this->skidPortrait->set_visible(false);
HXLINE( 413)			this->dadPortrait->set_visible(false);
HXLINE( 414)			this->gfportrait->set_visible(false);
HXLINE( 415)			this->bfportrait->set_visible(false);
HXLINE( 416)			this->portraitRight->set_visible(false);
HXLINE( 417)			this->portraitLeft->set_visible(false);
HXLINE( 418)			if (!(this->portraitRight->visible)) {
HXLINE( 420)				this->portraitRight->set_visible(true);
HXLINE( 421)				this->portraitRight->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 402)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("boyfriend",6a,29,b8,e6)) ){
HXLINE( 445)			this->monsterPortrait->set_visible(false);
HXLINE( 446)			this->parentsPortrait->set_visible(false);
HXLINE( 447)			this->parentsMomPortrait->set_visible(false);
HXLINE( 448)			this->parentsDadPortrait->set_visible(false);
HXLINE( 449)			this->momPortrait->set_visible(false);
HXLINE( 450)			this->gf2Portrait->set_visible(false);
HXLINE( 451)			this->pico2Portrait->set_visible(false);
HXLINE( 452)			this->picoPortrait->set_visible(false);
HXLINE( 453)			this->pumpPortrait->set_visible(false);
HXLINE( 454)			this->skidPortrait->set_visible(false);
HXLINE( 455)			this->dadPortrait->set_visible(false);
HXLINE( 456)			this->gfportrait->set_visible(false);
HXLINE( 457)			this->bfportrait->set_visible(false);
HXLINE( 458)			this->portraitRight->set_visible(false);
HXLINE( 459)			this->portraitLeft->set_visible(false);
HXLINE( 460)			if (!(this->bfportrait->visible)) {
HXLINE( 462)				this->bfportrait->set_visible(true);
HXLINE( 463)				this->bfportrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 444)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("christmasLemon",11,45,3b,d5)) ){
HXLINE( 676)			this->monsterPortrait->set_visible(false);
HXLINE( 677)			this->parentsPortrait->set_visible(false);
HXLINE( 678)			this->parentsMomPortrait->set_visible(false);
HXLINE( 679)			this->parentsDadPortrait->set_visible(false);
HXLINE( 680)			this->momPortrait->set_visible(false);
HXLINE( 681)			this->gf2Portrait->set_visible(false);
HXLINE( 682)			this->pico2Portrait->set_visible(false);
HXLINE( 683)			this->picoPortrait->set_visible(false);
HXLINE( 684)			this->pumpPortrait->set_visible(false);
HXLINE( 685)			this->skidPortrait->set_visible(false);
HXLINE( 686)			this->dadPortrait->set_visible(false);
HXLINE( 687)			this->gfportrait->set_visible(false);
HXLINE( 688)			this->bfportrait->set_visible(false);
HXLINE( 689)			this->portraitRight->set_visible(false);
HXLINE( 690)			this->portraitLeft->set_visible(false);
HXLINE( 691)			if (!(this->monsterPortrait->visible)) {
HXLINE( 693)				this->monsterPortrait->set_visible(true);
HXLINE( 694)				this->monsterPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 675)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("dad",47,36,4c,00)) ){
HXLINE( 382)			this->monsterPortrait->set_visible(false);
HXLINE( 383)			this->parentsPortrait->set_visible(false);
HXLINE( 384)			this->parentsMomPortrait->set_visible(false);
HXLINE( 385)			this->parentsDadPortrait->set_visible(false);
HXLINE( 386)			this->momPortrait->set_visible(false);
HXLINE( 387)			this->gf2Portrait->set_visible(false);
HXLINE( 388)			this->pico2Portrait->set_visible(false);
HXLINE( 389)			this->picoPortrait->set_visible(false);
HXLINE( 390)			this->pumpPortrait->set_visible(false);
HXLINE( 391)			this->skidPortrait->set_visible(false);
HXLINE( 392)			this->dadPortrait->set_visible(false);
HXLINE( 393)			this->gfportrait->set_visible(false);
HXLINE( 394)			this->bfportrait->set_visible(false);
HXLINE( 395)			this->portraitRight->set_visible(false);
HXLINE( 396)			this->portraitLeft->set_visible(false);
HXLINE( 397)			if (!(this->portraitLeft->visible)) {
HXLINE( 399)				this->portraitLeft->set_visible(true);
HXLINE( 400)				this->portraitLeft->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 381)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("dearest",d4,74,f3,c5)) ){
HXLINE( 466)			this->monsterPortrait->set_visible(false);
HXLINE( 467)			this->parentsPortrait->set_visible(false);
HXLINE( 468)			this->parentsMomPortrait->set_visible(false);
HXLINE( 469)			this->parentsDadPortrait->set_visible(false);
HXLINE( 470)			this->momPortrait->set_visible(false);
HXLINE( 471)			this->gf2Portrait->set_visible(false);
HXLINE( 472)			this->pico2Portrait->set_visible(false);
HXLINE( 473)			this->picoPortrait->set_visible(false);
HXLINE( 474)			this->pumpPortrait->set_visible(false);
HXLINE( 475)			this->skidPortrait->set_visible(false);
HXLINE( 476)			this->dadPortrait->set_visible(false);
HXLINE( 477)			this->gfportrait->set_visible(false);
HXLINE( 478)			this->bfportrait->set_visible(false);
HXLINE( 479)			this->portraitRight->set_visible(false);
HXLINE( 480)			this->portraitLeft->set_visible(false);
HXLINE( 481)			if (!(this->dadPortrait->visible)) {
HXLINE( 483)				this->dadPortrait->set_visible(true);
HXLINE( 484)				this->dadPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 465)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("gf",1f,5a,00,00)) ){
HXLINE( 424)			this->monsterPortrait->set_visible(false);
HXLINE( 425)			this->parentsPortrait->set_visible(false);
HXLINE( 426)			this->parentsMomPortrait->set_visible(false);
HXLINE( 427)			this->parentsDadPortrait->set_visible(false);
HXLINE( 428)			this->momPortrait->set_visible(false);
HXLINE( 429)			this->gf2Portrait->set_visible(false);
HXLINE( 430)			this->pico2Portrait->set_visible(false);
HXLINE( 431)			this->picoPortrait->set_visible(false);
HXLINE( 432)			this->pumpPortrait->set_visible(false);
HXLINE( 433)			this->skidPortrait->set_visible(false);
HXLINE( 434)			this->dadPortrait->set_visible(false);
HXLINE( 435)			this->gfportrait->set_visible(false);
HXLINE( 436)			this->bfportrait->set_visible(false);
HXLINE( 437)			this->portraitRight->set_visible(false);
HXLINE( 438)			this->portraitLeft->set_visible(false);
HXLINE( 439)			if (!(this->gfportrait->visible)) {
HXLINE( 441)				this->gfportrait->set_visible(true);
HXLINE( 442)				this->gfportrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 423)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("gf-cheer",9f,12,9f,d8)) ){
HXLINE( 571)			this->monsterPortrait->set_visible(false);
HXLINE( 572)			this->parentsPortrait->set_visible(false);
HXLINE( 573)			this->parentsMomPortrait->set_visible(false);
HXLINE( 574)			this->parentsDadPortrait->set_visible(false);
HXLINE( 575)			this->momPortrait->set_visible(false);
HXLINE( 576)			this->gf2Portrait->set_visible(false);
HXLINE( 577)			this->pico2Portrait->set_visible(false);
HXLINE( 578)			this->picoPortrait->set_visible(false);
HXLINE( 579)			this->pumpPortrait->set_visible(false);
HXLINE( 580)			this->skidPortrait->set_visible(false);
HXLINE( 581)			this->dadPortrait->set_visible(false);
HXLINE( 582)			this->gfportrait->set_visible(false);
HXLINE( 583)			this->bfportrait->set_visible(false);
HXLINE( 584)			this->portraitRight->set_visible(false);
HXLINE( 585)			this->portraitLeft->set_visible(false);
HXLINE( 586)			if (!(this->gf2Portrait->visible)) {
HXLINE( 588)				this->gf2Portrait->set_visible(true);
HXLINE( 589)				this->gf2Portrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 570)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("mom",cb,16,53,00)) ){
HXLINE( 592)			this->monsterPortrait->set_visible(false);
HXLINE( 593)			this->parentsPortrait->set_visible(false);
HXLINE( 594)			this->parentsMomPortrait->set_visible(false);
HXLINE( 595)			this->parentsDadPortrait->set_visible(false);
HXLINE( 596)			this->momPortrait->set_visible(false);
HXLINE( 597)			this->gf2Portrait->set_visible(false);
HXLINE( 598)			this->pico2Portrait->set_visible(false);
HXLINE( 599)			this->picoPortrait->set_visible(false);
HXLINE( 600)			this->pumpPortrait->set_visible(false);
HXLINE( 601)			this->skidPortrait->set_visible(false);
HXLINE( 602)			this->dadPortrait->set_visible(false);
HXLINE( 603)			this->gfportrait->set_visible(false);
HXLINE( 604)			this->bfportrait->set_visible(false);
HXLINE( 605)			this->portraitRight->set_visible(false);
HXLINE( 606)			this->portraitLeft->set_visible(false);
HXLINE( 607)			if (!(this->momPortrait->visible)) {
HXLINE( 609)				this->momPortrait->set_visible(true);
HXLINE( 610)				this->momPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 591)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("parents",09,80,c6,e0)) ){
HXLINE( 655)			this->monsterPortrait->set_visible(false);
HXLINE( 656)			this->parentsPortrait->set_visible(false);
HXLINE( 657)			this->parentsMomPortrait->set_visible(false);
HXLINE( 658)			this->parentsDadPortrait->set_visible(false);
HXLINE( 659)			this->momPortrait->set_visible(false);
HXLINE( 660)			this->gf2Portrait->set_visible(false);
HXLINE( 661)			this->pico2Portrait->set_visible(false);
HXLINE( 662)			this->picoPortrait->set_visible(false);
HXLINE( 663)			this->pumpPortrait->set_visible(false);
HXLINE( 664)			this->skidPortrait->set_visible(false);
HXLINE( 665)			this->dadPortrait->set_visible(false);
HXLINE( 666)			this->gfportrait->set_visible(false);
HXLINE( 667)			this->bfportrait->set_visible(false);
HXLINE( 668)			this->portraitRight->set_visible(false);
HXLINE( 669)			this->portraitLeft->set_visible(false);
HXLINE( 670)			if (!(this->parentsPortrait->visible)) {
HXLINE( 672)				this->parentsPortrait->set_visible(true);
HXLINE( 673)				this->parentsPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 654)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("parentsDad",be,59,70,00)) ){
HXLINE( 613)			this->monsterPortrait->set_visible(false);
HXLINE( 614)			this->parentsPortrait->set_visible(false);
HXLINE( 615)			this->parentsMomPortrait->set_visible(false);
HXLINE( 616)			this->parentsDadPortrait->set_visible(false);
HXLINE( 617)			this->momPortrait->set_visible(false);
HXLINE( 618)			this->gf2Portrait->set_visible(false);
HXLINE( 619)			this->pico2Portrait->set_visible(false);
HXLINE( 620)			this->picoPortrait->set_visible(false);
HXLINE( 621)			this->pumpPortrait->set_visible(false);
HXLINE( 622)			this->skidPortrait->set_visible(false);
HXLINE( 623)			this->dadPortrait->set_visible(false);
HXLINE( 624)			this->gfportrait->set_visible(false);
HXLINE( 625)			this->bfportrait->set_visible(false);
HXLINE( 626)			this->portraitRight->set_visible(false);
HXLINE( 627)			this->portraitLeft->set_visible(false);
HXLINE( 628)			if (!(this->parentsDadPortrait->visible)) {
HXLINE( 630)				this->parentsDadPortrait->set_visible(true);
HXLINE( 631)				this->parentsDadPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 612)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("parentsMom",42,3a,77,00)) ){
HXLINE( 634)			this->monsterPortrait->set_visible(false);
HXLINE( 635)			this->parentsPortrait->set_visible(false);
HXLINE( 636)			this->parentsMomPortrait->set_visible(false);
HXLINE( 637)			this->parentsDadPortrait->set_visible(false);
HXLINE( 638)			this->momPortrait->set_visible(false);
HXLINE( 639)			this->gf2Portrait->set_visible(false);
HXLINE( 640)			this->pico2Portrait->set_visible(false);
HXLINE( 641)			this->picoPortrait->set_visible(false);
HXLINE( 642)			this->pumpPortrait->set_visible(false);
HXLINE( 643)			this->skidPortrait->set_visible(false);
HXLINE( 644)			this->dadPortrait->set_visible(false);
HXLINE( 645)			this->gfportrait->set_visible(false);
HXLINE( 646)			this->bfportrait->set_visible(false);
HXLINE( 647)			this->portraitRight->set_visible(false);
HXLINE( 648)			this->portraitLeft->set_visible(false);
HXLINE( 649)			if (!(this->parentsMomPortrait->visible)) {
HXLINE( 651)				this->parentsMomPortrait->set_visible(true);
HXLINE( 652)				this->parentsMomPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 633)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("pico",e5,e8,57,4a)) ){
HXLINE( 529)			this->monsterPortrait->set_visible(false);
HXLINE( 530)			this->parentsPortrait->set_visible(false);
HXLINE( 531)			this->parentsMomPortrait->set_visible(false);
HXLINE( 532)			this->parentsDadPortrait->set_visible(false);
HXLINE( 533)			this->momPortrait->set_visible(false);
HXLINE( 534)			this->gf2Portrait->set_visible(false);
HXLINE( 535)			this->pico2Portrait->set_visible(false);
HXLINE( 536)			this->picoPortrait->set_visible(false);
HXLINE( 537)			this->pumpPortrait->set_visible(false);
HXLINE( 538)			this->skidPortrait->set_visible(false);
HXLINE( 539)			this->dadPortrait->set_visible(false);
HXLINE( 540)			this->gfportrait->set_visible(false);
HXLINE( 541)			this->bfportrait->set_visible(false);
HXLINE( 542)			this->portraitRight->set_visible(false);
HXLINE( 543)			this->portraitLeft->set_visible(false);
HXLINE( 544)			if (!(this->picoPortrait->visible)) {
HXLINE( 546)				this->picoPortrait->set_visible(true);
HXLINE( 547)				this->picoPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 528)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("pico-angry",79,a8,da,ec)) ){
HXLINE( 550)			this->monsterPortrait->set_visible(false);
HXLINE( 551)			this->parentsPortrait->set_visible(false);
HXLINE( 552)			this->parentsMomPortrait->set_visible(false);
HXLINE( 553)			this->parentsDadPortrait->set_visible(false);
HXLINE( 554)			this->momPortrait->set_visible(false);
HXLINE( 555)			this->gf2Portrait->set_visible(false);
HXLINE( 556)			this->pico2Portrait->set_visible(false);
HXLINE( 557)			this->picoPortrait->set_visible(false);
HXLINE( 558)			this->pumpPortrait->set_visible(false);
HXLINE( 559)			this->skidPortrait->set_visible(false);
HXLINE( 560)			this->dadPortrait->set_visible(false);
HXLINE( 561)			this->gfportrait->set_visible(false);
HXLINE( 562)			this->bfportrait->set_visible(false);
HXLINE( 563)			this->portraitRight->set_visible(false);
HXLINE( 564)			this->portraitLeft->set_visible(false);
HXLINE( 565)			if (!(this->pico2Portrait->visible)) {
HXLINE( 567)				this->pico2Portrait->set_visible(true);
HXLINE( 568)				this->pico2Portrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 549)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("pump",a8,0c,61,4a)) ){
HXLINE( 508)			this->monsterPortrait->set_visible(false);
HXLINE( 509)			this->parentsPortrait->set_visible(false);
HXLINE( 510)			this->parentsMomPortrait->set_visible(false);
HXLINE( 511)			this->parentsDadPortrait->set_visible(false);
HXLINE( 512)			this->momPortrait->set_visible(false);
HXLINE( 513)			this->gf2Portrait->set_visible(false);
HXLINE( 514)			this->pico2Portrait->set_visible(false);
HXLINE( 515)			this->picoPortrait->set_visible(false);
HXLINE( 516)			this->pumpPortrait->set_visible(false);
HXLINE( 517)			this->skidPortrait->set_visible(false);
HXLINE( 518)			this->dadPortrait->set_visible(false);
HXLINE( 519)			this->gfportrait->set_visible(false);
HXLINE( 520)			this->bfportrait->set_visible(false);
HXLINE( 521)			this->portraitRight->set_visible(false);
HXLINE( 522)			this->portraitLeft->set_visible(false);
HXLINE( 523)			if (!(this->pumpPortrait->visible)) {
HXLINE( 525)				this->pumpPortrait->set_visible(true);
HXLINE( 526)				this->pumpPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 507)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==HX_("skid",73,16,55,4c)) ){
HXLINE( 487)			this->monsterPortrait->set_visible(false);
HXLINE( 488)			this->parentsPortrait->set_visible(false);
HXLINE( 489)			this->parentsMomPortrait->set_visible(false);
HXLINE( 490)			this->parentsDadPortrait->set_visible(false);
HXLINE( 491)			this->momPortrait->set_visible(false);
HXLINE( 492)			this->gf2Portrait->set_visible(false);
HXLINE( 493)			this->pico2Portrait->set_visible(false);
HXLINE( 494)			this->picoPortrait->set_visible(false);
HXLINE( 495)			this->pumpPortrait->set_visible(false);
HXLINE( 496)			this->skidPortrait->set_visible(false);
HXLINE( 497)			this->dadPortrait->set_visible(false);
HXLINE( 498)			this->gfportrait->set_visible(false);
HXLINE( 499)			this->bfportrait->set_visible(false);
HXLINE( 500)			this->portraitRight->set_visible(false);
HXLINE( 501)			this->portraitLeft->set_visible(false);
HXLINE( 502)			if (!(this->skidPortrait->visible)) {
HXLINE( 504)				this->skidPortrait->set_visible(true);
HXLINE( 505)				this->skidPortrait->animation->play(HX_("enter",18,6d,86,70),null(),null(),null());
            			}
HXLINE( 486)			goto _hx_goto_11;
            		}
            		_hx_goto_11:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(DialogueBox_obj,startDialogue,(void))

void DialogueBox_obj::cleanDialog(){
            	HX_STACKFRAME(&_hx_pos_abff9fa8c13cc7a0_700_cleanDialog)
HXLINE( 701)		::Array< ::String > splitName = this->dialogueList->__get(0).split(HX_(":",3a,00,00,00));
HXLINE( 702)		this->curCharacter = splitName->__get(1);
HXLINE( 703)		this->dialogueList[0] = ::StringTools_obj::trim(this->dialogueList->__get(0).substr((splitName->__get(1).length + 2),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(DialogueBox_obj,cleanDialog,(void))


::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__new(::hx::Null< bool >  __o_talkingRight,::Array< ::String > dialogueList) {
	::hx::ObjectPtr< DialogueBox_obj > __this = new DialogueBox_obj();
	__this->__construct(__o_talkingRight,dialogueList);
	return __this;
}

::hx::ObjectPtr< DialogueBox_obj > DialogueBox_obj::__alloc(::hx::Ctx *_hx_ctx,::hx::Null< bool >  __o_talkingRight,::Array< ::String > dialogueList) {
	DialogueBox_obj *__this = (DialogueBox_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DialogueBox_obj), true, "DialogueBox"));
	*(void **)__this = DialogueBox_obj::_hx_vtable;
	__this->__construct(__o_talkingRight,dialogueList);
	return __this;
}

DialogueBox_obj::DialogueBox_obj()
{
}

void DialogueBox_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DialogueBox);
	HX_MARK_MEMBER_NAME(box,"box");
	HX_MARK_MEMBER_NAME(curCharacter,"curCharacter");
	HX_MARK_MEMBER_NAME(dialogue,"dialogue");
	HX_MARK_MEMBER_NAME(dialogueList,"dialogueList");
	HX_MARK_MEMBER_NAME(swagDialogue,"swagDialogue");
	HX_MARK_MEMBER_NAME(dropText,"dropText");
	HX_MARK_MEMBER_NAME(finishThing,"finishThing");
	HX_MARK_MEMBER_NAME(portraitLeft,"portraitLeft");
	HX_MARK_MEMBER_NAME(portraitRight,"portraitRight");
	HX_MARK_MEMBER_NAME(gfportrait,"gfportrait");
	HX_MARK_MEMBER_NAME(gf2Portrait,"gf2Portrait");
	HX_MARK_MEMBER_NAME(bfportrait,"bfportrait");
	HX_MARK_MEMBER_NAME(dadPortrait,"dadPortrait");
	HX_MARK_MEMBER_NAME(pumpPortrait,"pumpPortrait");
	HX_MARK_MEMBER_NAME(skidPortrait,"skidPortrait");
	HX_MARK_MEMBER_NAME(picoPortrait,"picoPortrait");
	HX_MARK_MEMBER_NAME(pico2Portrait,"pico2Portrait");
	HX_MARK_MEMBER_NAME(momPortrait,"momPortrait");
	HX_MARK_MEMBER_NAME(parentsMomPortrait,"parentsMomPortrait");
	HX_MARK_MEMBER_NAME(parentsDadPortrait,"parentsDadPortrait");
	HX_MARK_MEMBER_NAME(parentsPortrait,"parentsPortrait");
	HX_MARK_MEMBER_NAME(monsterPortrait,"monsterPortrait");
	HX_MARK_MEMBER_NAME(handSelect,"handSelect");
	HX_MARK_MEMBER_NAME(bgFade,"bgFade");
	HX_MARK_MEMBER_NAME(dialogueOpened,"dialogueOpened");
	HX_MARK_MEMBER_NAME(dialogueStarted,"dialogueStarted");
	HX_MARK_MEMBER_NAME(isEnding,"isEnding");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DialogueBox_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(box,"box");
	HX_VISIT_MEMBER_NAME(curCharacter,"curCharacter");
	HX_VISIT_MEMBER_NAME(dialogue,"dialogue");
	HX_VISIT_MEMBER_NAME(dialogueList,"dialogueList");
	HX_VISIT_MEMBER_NAME(swagDialogue,"swagDialogue");
	HX_VISIT_MEMBER_NAME(dropText,"dropText");
	HX_VISIT_MEMBER_NAME(finishThing,"finishThing");
	HX_VISIT_MEMBER_NAME(portraitLeft,"portraitLeft");
	HX_VISIT_MEMBER_NAME(portraitRight,"portraitRight");
	HX_VISIT_MEMBER_NAME(gfportrait,"gfportrait");
	HX_VISIT_MEMBER_NAME(gf2Portrait,"gf2Portrait");
	HX_VISIT_MEMBER_NAME(bfportrait,"bfportrait");
	HX_VISIT_MEMBER_NAME(dadPortrait,"dadPortrait");
	HX_VISIT_MEMBER_NAME(pumpPortrait,"pumpPortrait");
	HX_VISIT_MEMBER_NAME(skidPortrait,"skidPortrait");
	HX_VISIT_MEMBER_NAME(picoPortrait,"picoPortrait");
	HX_VISIT_MEMBER_NAME(pico2Portrait,"pico2Portrait");
	HX_VISIT_MEMBER_NAME(momPortrait,"momPortrait");
	HX_VISIT_MEMBER_NAME(parentsMomPortrait,"parentsMomPortrait");
	HX_VISIT_MEMBER_NAME(parentsDadPortrait,"parentsDadPortrait");
	HX_VISIT_MEMBER_NAME(parentsPortrait,"parentsPortrait");
	HX_VISIT_MEMBER_NAME(monsterPortrait,"monsterPortrait");
	HX_VISIT_MEMBER_NAME(handSelect,"handSelect");
	HX_VISIT_MEMBER_NAME(bgFade,"bgFade");
	HX_VISIT_MEMBER_NAME(dialogueOpened,"dialogueOpened");
	HX_VISIT_MEMBER_NAME(dialogueStarted,"dialogueStarted");
	HX_VISIT_MEMBER_NAME(isEnding,"isEnding");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val DialogueBox_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"box") ) { return ::hx::Val( box ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bgFade") ) { return ::hx::Val( bgFade ); }
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"dialogue") ) { return ::hx::Val( dialogue ); }
		if (HX_FIELD_EQ(inName,"dropText") ) { return ::hx::Val( dropText ); }
		if (HX_FIELD_EQ(inName,"isEnding") ) { return ::hx::Val( isEnding ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"gfportrait") ) { return ::hx::Val( gfportrait ); }
		if (HX_FIELD_EQ(inName,"bfportrait") ) { return ::hx::Val( bfportrait ); }
		if (HX_FIELD_EQ(inName,"handSelect") ) { return ::hx::Val( handSelect ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"finishThing") ) { return ::hx::Val( finishThing ); }
		if (HX_FIELD_EQ(inName,"gf2Portrait") ) { return ::hx::Val( gf2Portrait ); }
		if (HX_FIELD_EQ(inName,"dadPortrait") ) { return ::hx::Val( dadPortrait ); }
		if (HX_FIELD_EQ(inName,"momPortrait") ) { return ::hx::Val( momPortrait ); }
		if (HX_FIELD_EQ(inName,"cleanDialog") ) { return ::hx::Val( cleanDialog_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"curCharacter") ) { return ::hx::Val( curCharacter ); }
		if (HX_FIELD_EQ(inName,"dialogueList") ) { return ::hx::Val( dialogueList ); }
		if (HX_FIELD_EQ(inName,"swagDialogue") ) { return ::hx::Val( swagDialogue ); }
		if (HX_FIELD_EQ(inName,"portraitLeft") ) { return ::hx::Val( portraitLeft ); }
		if (HX_FIELD_EQ(inName,"pumpPortrait") ) { return ::hx::Val( pumpPortrait ); }
		if (HX_FIELD_EQ(inName,"skidPortrait") ) { return ::hx::Val( skidPortrait ); }
		if (HX_FIELD_EQ(inName,"picoPortrait") ) { return ::hx::Val( picoPortrait ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"portraitRight") ) { return ::hx::Val( portraitRight ); }
		if (HX_FIELD_EQ(inName,"pico2Portrait") ) { return ::hx::Val( pico2Portrait ); }
		if (HX_FIELD_EQ(inName,"startDialogue") ) { return ::hx::Val( startDialogue_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"dialogueOpened") ) { return ::hx::Val( dialogueOpened ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"parentsPortrait") ) { return ::hx::Val( parentsPortrait ); }
		if (HX_FIELD_EQ(inName,"monsterPortrait") ) { return ::hx::Val( monsterPortrait ); }
		if (HX_FIELD_EQ(inName,"dialogueStarted") ) { return ::hx::Val( dialogueStarted ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"parentsMomPortrait") ) { return ::hx::Val( parentsMomPortrait ); }
		if (HX_FIELD_EQ(inName,"parentsDadPortrait") ) { return ::hx::Val( parentsDadPortrait ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val DialogueBox_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"box") ) { box=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"bgFade") ) { bgFade=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"dialogue") ) { dialogue=inValue.Cast<  ::Alphabet >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dropText") ) { dropText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"isEnding") ) { isEnding=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"gfportrait") ) { gfportrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bfportrait") ) { bfportrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"handSelect") ) { handSelect=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"finishThing") ) { finishThing=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"gf2Portrait") ) { gf2Portrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dadPortrait") ) { dadPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"momPortrait") ) { momPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"curCharacter") ) { curCharacter=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dialogueList") ) { dialogueList=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"swagDialogue") ) { swagDialogue=inValue.Cast<  ::flixel::addons::text::FlxTypeText >(); return inValue; }
		if (HX_FIELD_EQ(inName,"portraitLeft") ) { portraitLeft=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pumpPortrait") ) { pumpPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"skidPortrait") ) { skidPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"picoPortrait") ) { picoPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"portraitRight") ) { portraitRight=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pico2Portrait") ) { pico2Portrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"dialogueOpened") ) { dialogueOpened=inValue.Cast< bool >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"parentsPortrait") ) { parentsPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"monsterPortrait") ) { monsterPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"dialogueStarted") ) { dialogueStarted=inValue.Cast< bool >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"parentsMomPortrait") ) { parentsMomPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parentsDadPortrait") ) { parentsDadPortrait=inValue.Cast<  ::flixel::FlxSprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DialogueBox_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("box",0b,be,4a,00));
	outFields->push(HX_("curCharacter",09,86,7c,d7));
	outFields->push(HX_("dialogue",18,2d,94,a7));
	outFields->push(HX_("dialogueList",96,e1,d8,0d));
	outFields->push(HX_("swagDialogue",c2,ad,00,ad));
	outFields->push(HX_("dropText",7c,74,94,f2));
	outFields->push(HX_("portraitLeft",02,9f,53,0d));
	outFields->push(HX_("portraitRight",81,90,e4,12));
	outFields->push(HX_("gfportrait",7a,32,d5,22));
	outFields->push(HX_("gf2Portrait",ae,49,b0,3c));
	outFields->push(HX_("bfportrait",1f,db,60,61));
	outFields->push(HX_("dadPortrait",c2,32,c7,2b));
	outFields->push(HX_("pumpPortrait",23,d2,1a,65));
	outFields->push(HX_("skidPortrait",ee,1e,2e,3d));
	outFields->push(HX_("picoPortrait",60,b3,d3,04));
	outFields->push(HX_("pico2Portrait",28,b2,8f,77));
	outFields->push(HX_("momPortrait",46,37,28,a2));
	outFields->push(HX_("parentsMomPortrait",bd,29,df,75));
	outFields->push(HX_("parentsDadPortrait",39,25,7e,ff));
	outFields->push(HX_("parentsPortrait",84,0e,24,c8));
	outFields->push(HX_("monsterPortrait",95,db,09,1e));
	outFields->push(HX_("handSelect",cb,77,90,7c));
	outFields->push(HX_("bgFade",e1,fd,cd,ab));
	outFields->push(HX_("dialogueOpened",e1,e5,9f,10));
	outFields->push(HX_("dialogueStarted",09,77,22,70));
	outFields->push(HX_("isEnding",71,3f,f2,52));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo DialogueBox_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,box),HX_("box",0b,be,4a,00)},
	{::hx::fsString,(int)offsetof(DialogueBox_obj,curCharacter),HX_("curCharacter",09,86,7c,d7)},
	{::hx::fsObject /*  ::Alphabet */ ,(int)offsetof(DialogueBox_obj,dialogue),HX_("dialogue",18,2d,94,a7)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(DialogueBox_obj,dialogueList),HX_("dialogueList",96,e1,d8,0d)},
	{::hx::fsObject /*  ::flixel::addons::text::FlxTypeText */ ,(int)offsetof(DialogueBox_obj,swagDialogue),HX_("swagDialogue",c2,ad,00,ad)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(DialogueBox_obj,dropText),HX_("dropText",7c,74,94,f2)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DialogueBox_obj,finishThing),HX_("finishThing",9b,aa,8e,36)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,portraitLeft),HX_("portraitLeft",02,9f,53,0d)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,portraitRight),HX_("portraitRight",81,90,e4,12)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,gfportrait),HX_("gfportrait",7a,32,d5,22)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,gf2Portrait),HX_("gf2Portrait",ae,49,b0,3c)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,bfportrait),HX_("bfportrait",1f,db,60,61)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,dadPortrait),HX_("dadPortrait",c2,32,c7,2b)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,pumpPortrait),HX_("pumpPortrait",23,d2,1a,65)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,skidPortrait),HX_("skidPortrait",ee,1e,2e,3d)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,picoPortrait),HX_("picoPortrait",60,b3,d3,04)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,pico2Portrait),HX_("pico2Portrait",28,b2,8f,77)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,momPortrait),HX_("momPortrait",46,37,28,a2)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,parentsMomPortrait),HX_("parentsMomPortrait",bd,29,df,75)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,parentsDadPortrait),HX_("parentsDadPortrait",39,25,7e,ff)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,parentsPortrait),HX_("parentsPortrait",84,0e,24,c8)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,monsterPortrait),HX_("monsterPortrait",95,db,09,1e)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,handSelect),HX_("handSelect",cb,77,90,7c)},
	{::hx::fsObject /*  ::flixel::FlxSprite */ ,(int)offsetof(DialogueBox_obj,bgFade),HX_("bgFade",e1,fd,cd,ab)},
	{::hx::fsBool,(int)offsetof(DialogueBox_obj,dialogueOpened),HX_("dialogueOpened",e1,e5,9f,10)},
	{::hx::fsBool,(int)offsetof(DialogueBox_obj,dialogueStarted),HX_("dialogueStarted",09,77,22,70)},
	{::hx::fsBool,(int)offsetof(DialogueBox_obj,isEnding),HX_("isEnding",71,3f,f2,52)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *DialogueBox_obj_sStaticStorageInfo = 0;
#endif

static ::String DialogueBox_obj_sMemberFields[] = {
	HX_("box",0b,be,4a,00),
	HX_("curCharacter",09,86,7c,d7),
	HX_("dialogue",18,2d,94,a7),
	HX_("dialogueList",96,e1,d8,0d),
	HX_("swagDialogue",c2,ad,00,ad),
	HX_("dropText",7c,74,94,f2),
	HX_("finishThing",9b,aa,8e,36),
	HX_("portraitLeft",02,9f,53,0d),
	HX_("portraitRight",81,90,e4,12),
	HX_("gfportrait",7a,32,d5,22),
	HX_("gf2Portrait",ae,49,b0,3c),
	HX_("bfportrait",1f,db,60,61),
	HX_("dadPortrait",c2,32,c7,2b),
	HX_("pumpPortrait",23,d2,1a,65),
	HX_("skidPortrait",ee,1e,2e,3d),
	HX_("picoPortrait",60,b3,d3,04),
	HX_("pico2Portrait",28,b2,8f,77),
	HX_("momPortrait",46,37,28,a2),
	HX_("parentsMomPortrait",bd,29,df,75),
	HX_("parentsDadPortrait",39,25,7e,ff),
	HX_("parentsPortrait",84,0e,24,c8),
	HX_("monsterPortrait",95,db,09,1e),
	HX_("handSelect",cb,77,90,7c),
	HX_("bgFade",e1,fd,cd,ab),
	HX_("dialogueOpened",e1,e5,9f,10),
	HX_("dialogueStarted",09,77,22,70),
	HX_("update",09,86,05,87),
	HX_("isEnding",71,3f,f2,52),
	HX_("startDialogue",9a,8f,4f,ac),
	HX_("cleanDialog",31,37,ca,9e),
	::String(null()) };

::hx::Class DialogueBox_obj::__mClass;

void DialogueBox_obj::__register()
{
	DialogueBox_obj _hx_dummy;
	DialogueBox_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("DialogueBox",b3,1f,c8,ff);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DialogueBox_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DialogueBox_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DialogueBox_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DialogueBox_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

