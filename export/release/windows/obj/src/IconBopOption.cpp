// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_IconBopOption
#include <IconBopOption.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ef03e08b08abe751_139_new,"IconBopOption","new",0xedd98771,"IconBopOption.new","Options.hx",139,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_ef03e08b08abe751_145_press,"IconBopOption","press",0x6c36b0d4,"IconBopOption.press","Options.hx",145,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_ef03e08b08abe751_153_updateDisplay,"IconBopOption","updateDisplay",0xf9ee258a,"IconBopOption.updateDisplay","Options.hx",153,0x9d9a0240)

void IconBopOption_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_ef03e08b08abe751_139_new)
HXLINE( 140)		super::__construct();
HXLINE( 141)		this->description = desc;
            	}

Dynamic IconBopOption_obj::__CreateEmpty() { return new IconBopOption_obj; }

void *IconBopOption_obj::_hx_vtable = 0;

Dynamic IconBopOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IconBopOption_obj > _hx_result = new IconBopOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IconBopOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x6e32103f;
	}
}

bool IconBopOption_obj::press(){
            	HX_STACKFRAME(&_hx_pos_ef03e08b08abe751_145_press)
HXLINE( 146)		::flixel::FlxG_obj::save->data->__SetField(HX_("iconbops",09,1d,4a,83),!(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("iconbops",09,1d,4a,83),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 147)		this->display = this->updateDisplay();
HXLINE( 148)		return true;
            	}


::String IconBopOption_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_ef03e08b08abe751_153_updateDisplay)
HXDLIN( 153)		::String _hx_tmp;
HXDLIN( 153)		if (!(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("iconbops",09,1d,4a,83),::hx::paccDynamic)) ))) {
HXDLIN( 153)			_hx_tmp = HX_("off",6f,93,54,00);
            		}
            		else {
HXDLIN( 153)			_hx_tmp = HX_("on",1f,61,00,00);
            		}
HXDLIN( 153)		return (HX_("Icon Bops ",29,31,42,29) + _hx_tmp);
            	}



::hx::ObjectPtr< IconBopOption_obj > IconBopOption_obj::__new(::String desc) {
	::hx::ObjectPtr< IconBopOption_obj > __this = new IconBopOption_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< IconBopOption_obj > IconBopOption_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	IconBopOption_obj *__this = (IconBopOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IconBopOption_obj), true, "IconBopOption"));
	*(void **)__this = IconBopOption_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

IconBopOption_obj::IconBopOption_obj()
{
}

::hx::Val IconBopOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"press") ) { return ::hx::Val( press_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *IconBopOption_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *IconBopOption_obj_sStaticStorageInfo = 0;
#endif

static ::String IconBopOption_obj_sMemberFields[] = {
	HX_("press",83,53,88,c8),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class IconBopOption_obj::__mClass;

void IconBopOption_obj::__register()
{
	IconBopOption_obj _hx_dummy;
	IconBopOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("IconBopOption",ff,fa,ea,91);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(IconBopOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< IconBopOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IconBopOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IconBopOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

