// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_ModPaths
#include <ModPaths.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_animate_FlxAnimate
#include <animate/FlxAnimate.h>
#endif
#ifndef INCLUDED_animate_FlxSymbol
#include <animate/FlxSymbol.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_math_FlxRandom
#include <flixel/math/FlxRandom.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_openfl_utils_Assets
#include <openfl/utils/Assets.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_219_file,"ModPaths","file",0x634f5cfe,"ModPaths.file","Paths.hx",219,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_235_modIconImage,"ModPaths","modIconImage",0x0671b282,"ModPaths.modIconImage","Paths.hx",235,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_240_getModTxt,"ModPaths","getModTxt",0x703f5842,"ModPaths.getModTxt","Paths.hx",240,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_245_getModXml,"ModPaths","getModXml",0x704257a9,"ModPaths.getModXml","Paths.hx",245,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_250_getModGlobalTxt,"ModPaths","getModGlobalTxt",0xdec9c81f,"ModPaths.getModGlobalTxt","Paths.hx",250,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_255_getModGlobalXml,"ModPaths","getModGlobalXml",0xdeccc786,"ModPaths.getModGlobalXml","Paths.hx",255,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_260_getModJson,"ModPaths","getModJson",0xc08df016,"ModPaths.getModJson","Paths.hx",260,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_265_getModGlobalJson,"ModPaths","getModGlobalJson",0x0b256199,"ModPaths.getModGlobalJson","Paths.hx",265,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_270_getModSound,"ModPaths","getModSound",0xe79f0f21,"ModPaths.getModSound","Paths.hx",270,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_275_soundRandom,"ModPaths","soundRandom",0xba744df0,"ModPaths.soundRandom","Paths.hx",275,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_280_getModMusic,"ModPaths","getModMusic",0x772d52f7,"ModPaths.getModMusic","Paths.hx",280,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_285_getModVoices,"ModPaths","getModVoices",0xeea95bef,"ModPaths.getModVoices","Paths.hx",285,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_290_getModInst,"ModPaths","getModInst",0xbfe0f1b4,"ModPaths.getModInst","Paths.hx",290,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_295_getModImage,"ModPaths","getModImage",0x243ba1ad,"ModPaths.getModImage","Paths.hx",295,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_300_getModFont,"ModPaths","getModFont",0xbde60bbd,"ModPaths.getModFont","Paths.hx",300,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_305_getModLua,"ModPaths","getModLua",0x7039438a,"ModPaths.getModLua","Paths.hx",305,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_310_getModGlobalLua,"ModPaths","getModGlobalLua",0xdec3b367,"ModPaths.getModGlobalLua","Paths.hx",310,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_315_getModChar,"ModPaths","getModChar",0xbbe50cc4,"ModPaths.getModChar","Paths.hx",315,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_320_getModLocales,"ModPaths","getModLocales",0xcffbcd6b,"ModPaths.getModLocales","Paths.hx",320,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_325_getModFrag,"ModPaths","getModFrag",0xbde84720,"ModPaths.getModFrag","Paths.hx",325,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_330_getModVert,"ModPaths","getModVert",0xc871e29f,"ModPaths.getModVert","Paths.hx",330,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_335_checkMod,"ModPaths","checkMod",0x526fda5c,"ModPaths.checkMod","Paths.hx",335,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_340_getModSparrowAtlas,"ModPaths","getModSparrowAtlas",0x6c57a18d,"ModPaths.getModSparrowAtlas","Paths.hx",340,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_345_getModPackerAtlas,"ModPaths","getModPackerAtlas",0xf8296bb7,"ModPaths.getModPackerAtlas","Paths.hx",345,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_350_getModAnimateAtlas,"ModPaths","getModAnimateAtlas",0x7fe706d8,"ModPaths.getModAnimateAtlas","Paths.hx",350,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_216_boot,"ModPaths","boot",0x60af12b4,"ModPaths.boot","Paths.hx",216,0x309ea470)
HX_LOCAL_STACK_FRAME(_hx_pos_83ae5369c3913d5a_231_boot,"ModPaths","boot",0x60af12b4,"ModPaths.boot","Paths.hx",231,0x309ea470)

void ModPaths_obj::__construct() { }

Dynamic ModPaths_obj::__CreateEmpty() { return new ModPaths_obj; }

void *ModPaths_obj::_hx_vtable = 0;

Dynamic ModPaths_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ModPaths_obj > _hx_result = new ModPaths_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ModPaths_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3aa23950) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x3aa23950;
	} else {
		return inClassId==(int)0x44c8e46a;
	}
}

::String ModPaths_obj::currentLevel;

::String ModPaths_obj::file(::String file,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_219_file)
HXLINE( 220)		::String path = HX_("",00,00,00,00);
HXLINE( 221)		if (::hx::IsNotNull( mod )) {
HXLINE( 222)			path = (((HX_("mods/",9e,2f,58,0c) + mod) + HX_("/",2f,00,00,00)) + file);
            		}
            		else {
HXLINE( 224)			path = (HX_("mods/",9e,2f,58,0c) + file);
            		}
HXLINE( 225)		if (::openfl::utils::Assets_obj::exists(path,null())) {
HXLINE( 226)			return path;
            		}
HXLINE( 228)		return HX_("mods",71,d3,60,48);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,file,return )

::String ModPaths_obj::SOUND_EXT;

::String ModPaths_obj::modIconImage(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_235_modIconImage)
HXDLIN( 235)		return ::ModPaths_obj::file(((HX_("",00,00,00,00) + mod) + HX_("/_polymod_icon.png",2d,47,a5,74)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,modIconImage,return )

::String ModPaths_obj::getModTxt(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_240_getModTxt)
HXDLIN( 240)		return ::ModPaths_obj::file(((HX_("data/",c5,0e,88,d4) + key) + HX_(".txt",02,3f,c0,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModTxt,return )

::String ModPaths_obj::getModXml(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_245_getModXml)
HXDLIN( 245)		return ::ModPaths_obj::file(((HX_("data/",c5,0e,88,d4) + key) + HX_(".xml",69,3e,c3,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModXml,return )

::String ModPaths_obj::getModGlobalTxt(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_250_getModGlobalTxt)
HXDLIN( 250)		return ::ModPaths_obj::file(((HX_("",00,00,00,00) + key) + HX_(".txt",02,3f,c0,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModGlobalTxt,return )

::String ModPaths_obj::getModGlobalXml(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_255_getModGlobalXml)
HXDLIN( 255)		return ::ModPaths_obj::file(((HX_("",00,00,00,00) + key) + HX_(".xml",69,3e,c3,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModGlobalXml,return )

::String ModPaths_obj::getModJson(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_260_getModJson)
HXDLIN( 260)		return ::ModPaths_obj::file(((HX_("data/",c5,0e,88,d4) + key) + HX_(".json",56,f1,d6,c2)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModJson,return )

::String ModPaths_obj::getModGlobalJson(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_265_getModGlobalJson)
HXDLIN( 265)		return ::ModPaths_obj::file(((HX_("",00,00,00,00) + key) + HX_(".json",56,f1,d6,c2)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModGlobalJson,return )

::String ModPaths_obj::getModSound(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_270_getModSound)
HXDLIN( 270)		return ::ModPaths_obj::file((((HX_("sounds/",eb,02,a5,b6) + key) + HX_(".",2e,00,00,00)) + ::ModPaths_obj::SOUND_EXT),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModSound,return )

::String ModPaths_obj::soundRandom(::String key,int min,int max,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_275_soundRandom)
HXDLIN( 275)		return ::ModPaths_obj::getModSound((key + ::flixel::FlxG_obj::random->_hx_int(min,max,null())),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(ModPaths_obj,soundRandom,return )

::String ModPaths_obj::getModMusic(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_280_getModMusic)
HXDLIN( 280)		return ::ModPaths_obj::file((((HX_("music/",ea,bf,1b,3f) + key) + HX_(".",2e,00,00,00)) + ::ModPaths_obj::SOUND_EXT),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModMusic,return )

::String ModPaths_obj::getModVoices(::String song,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_285_getModVoices)
HXDLIN( 285)		return ::ModPaths_obj::file((((((HX_("mods/",9e,2f,58,0c) + mod) + HX_("/songs/",e0,b4,f9,cf)) + song.toLowerCase()) + HX_("/Voices.",1e,f6,e5,90)) + ::ModPaths_obj::SOUND_EXT),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModVoices,return )

::String ModPaths_obj::getModInst(::String song,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_290_getModInst)
HXDLIN( 290)		return ::ModPaths_obj::file((((((HX_("mods/",9e,2f,58,0c) + mod) + HX_("/songs/",e0,b4,f9,cf)) + song.toLowerCase()) + HX_("/Inst.",f9,6e,13,1c)) + ::ModPaths_obj::SOUND_EXT),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModInst,return )

::String ModPaths_obj::getModImage(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_295_getModImage)
HXDLIN( 295)		return ::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModImage,return )

::String ModPaths_obj::getModFont(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_300_getModFont)
HXDLIN( 300)		return ::ModPaths_obj::file((HX_("fonts/",eb,13,ef,fa) + key),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModFont,return )

::String ModPaths_obj::getModLua(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_305_getModLua)
HXDLIN( 305)		return ::ModPaths_obj::file(((HX_("scripts/",27,8b,98,1a) + key) + HX_(".lua",4a,2a,ba,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModLua,return )

::String ModPaths_obj::getModGlobalLua(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_310_getModGlobalLua)
HXDLIN( 310)		return ::ModPaths_obj::file(((HX_("",00,00,00,00) + key) + HX_(".lua",4a,2a,ba,1e)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModGlobalLua,return )

::String ModPaths_obj::getModChar(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_315_getModChar)
HXDLIN( 315)		return ::ModPaths_obj::file(((HX_("characters/",45,3c,bf,be) + key) + HX_(".json",56,f1,d6,c2)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModChar,return )

::String ModPaths_obj::getModLocales(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_320_getModLocales)
HXDLIN( 320)		return ::ModPaths_obj::file(((HX_("locales/",76,b3,f9,df) + key) + HX_("/languageData.json",65,72,1c,09)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModLocales,return )

::String ModPaths_obj::getModFrag(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_325_getModFrag)
HXDLIN( 325)		return ::ModPaths_obj::file(((HX_("shaders/",c1,f6,2a,36) + key) + HX_(".frag",60,48,31,c0)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModFrag,return )

::String ModPaths_obj::getModVert(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_330_getModVert)
HXDLIN( 330)		return ::ModPaths_obj::file(((HX_("shaders/",c1,f6,2a,36) + key) + HX_(".vert",df,e3,ba,ca)),mod);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModVert,return )

bool ModPaths_obj::checkMod(::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_335_checkMod)
HXDLIN( 335)		return ::openfl::utils::Assets_obj::exists(((HX_("mods/",9e,2f,58,0c) + mod) + HX_("/_polymod_meta.json",58,b4,77,f3)),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ModPaths_obj,checkMod,return )

 ::flixel::graphics::frames::FlxAtlasFrames ModPaths_obj::getModSparrowAtlas(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_340_getModSparrowAtlas)
HXDLIN( 340)		::String _hx_tmp = ::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),mod);
HXDLIN( 340)		return ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(_hx_tmp,::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_(".xml",69,3e,c3,1e)),mod));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModSparrowAtlas,return )

 ::flixel::graphics::frames::FlxAtlasFrames ModPaths_obj::getModPackerAtlas(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_345_getModPackerAtlas)
HXDLIN( 345)		::String _hx_tmp = ::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_(".png",3b,2d,bd,1e)),mod);
HXDLIN( 345)		return ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSpriteSheetPacker(_hx_tmp,::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_(".txt",02,3f,c0,1e)),mod));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModPackerAtlas,return )

 ::flixel::graphics::frames::FlxAtlasFrames ModPaths_obj::getModAnimateAtlas(::String key,::String mod){
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_350_getModAnimateAtlas)
HXDLIN( 350)		 ::flixel::graphics::FlxGraphic _hx_tmp = ::Paths_obj::loadImage(((HX_("",00,00,00,00) + key) + HX_("/spritemap1",89,b1,e0,ab)));
HXDLIN( 350)		return ::animate::FlxAnimate_obj::fromAnimate(_hx_tmp,::ModPaths_obj::file(((HX_("images/",77,50,74,c1) + key) + HX_("/spritemap1.json",2d,0f,b9,fc)),mod));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ModPaths_obj,getModAnimateAtlas,return )


ModPaths_obj::ModPaths_obj()
{
}

bool ModPaths_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"file") ) { outValue = file_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"checkMod") ) { outValue = checkMod_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"SOUND_EXT") ) { outValue = ( SOUND_EXT ); return true; }
		if (HX_FIELD_EQ(inName,"getModTxt") ) { outValue = getModTxt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModXml") ) { outValue = getModXml_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModLua") ) { outValue = getModLua_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getModJson") ) { outValue = getModJson_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModInst") ) { outValue = getModInst_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModFont") ) { outValue = getModFont_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModChar") ) { outValue = getModChar_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModFrag") ) { outValue = getModFrag_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModVert") ) { outValue = getModVert_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getModSound") ) { outValue = getModSound_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"soundRandom") ) { outValue = soundRandom_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModMusic") ) { outValue = getModMusic_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModImage") ) { outValue = getModImage_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentLevel") ) { outValue = ( currentLevel ); return true; }
		if (HX_FIELD_EQ(inName,"modIconImage") ) { outValue = modIconImage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModVoices") ) { outValue = getModVoices_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getModLocales") ) { outValue = getModLocales_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getModGlobalTxt") ) { outValue = getModGlobalTxt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModGlobalXml") ) { outValue = getModGlobalXml_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModGlobalLua") ) { outValue = getModGlobalLua_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getModGlobalJson") ) { outValue = getModGlobalJson_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getModPackerAtlas") ) { outValue = getModPackerAtlas_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"getModSparrowAtlas") ) { outValue = getModSparrowAtlas_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getModAnimateAtlas") ) { outValue = getModAnimateAtlas_dyn(); return true; }
	}
	return false;
}

bool ModPaths_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"SOUND_EXT") ) { SOUND_EXT=ioValue.Cast< ::String >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"currentLevel") ) { currentLevel=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ModPaths_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo ModPaths_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &ModPaths_obj::currentLevel,HX_("currentLevel",8b,fa,6e,b9)},
	{::hx::fsString,(void *) &ModPaths_obj::SOUND_EXT,HX_("SOUND_EXT",b1,35,8c,6f)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void ModPaths_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ModPaths_obj::currentLevel,"currentLevel");
	HX_MARK_MEMBER_NAME(ModPaths_obj::SOUND_EXT,"SOUND_EXT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ModPaths_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ModPaths_obj::currentLevel,"currentLevel");
	HX_VISIT_MEMBER_NAME(ModPaths_obj::SOUND_EXT,"SOUND_EXT");
};

#endif

::hx::Class ModPaths_obj::__mClass;

static ::String ModPaths_obj_sStaticFields[] = {
	HX_("currentLevel",8b,fa,6e,b9),
	HX_("file",7c,ce,bb,43),
	HX_("SOUND_EXT",b1,35,8c,6f),
	HX_("modIconImage",00,d2,08,95),
	HX_("getModTxt",04,be,10,3d),
	HX_("getModXml",6b,bd,13,3d),
	HX_("getModGlobalTxt",61,eb,78,19),
	HX_("getModGlobalXml",c8,ea,7b,19),
	HX_("getModJson",14,94,f5,2a),
	HX_("getModGlobalJson",17,18,b5,29),
	HX_("getModSound",63,e9,e6,97),
	HX_("soundRandom",32,28,bc,6a),
	HX_("getModMusic",39,2d,75,27),
	HX_("getModVoices",6d,7b,40,7d),
	HX_("getModInst",b2,95,48,2a),
	HX_("getModImage",ef,7b,83,d4),
	HX_("getModFont",bb,af,4d,28),
	HX_("getModLua",4c,a9,0a,3d),
	HX_("getModGlobalLua",a9,d6,72,19),
	HX_("getModChar",c2,b0,4c,26),
	HX_("getModLocales",2d,3c,a0,05),
	HX_("getModFrag",1e,eb,4f,28),
	HX_("getModVert",9d,86,d9,32),
	HX_("checkMod",da,e2,e5,ac),
	HX_("getModSparrowAtlas",8b,73,20,17),
	HX_("getModPackerAtlas",79,63,59,97),
	HX_("getModAnimateAtlas",d6,d8,af,2a),
	::String(null())
};

void ModPaths_obj::__register()
{
	ModPaths_obj _hx_dummy;
	ModPaths_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ModPaths",2c,61,2f,88);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ModPaths_obj::__GetStatic;
	__mClass->mSetStaticField = &ModPaths_obj::__SetStatic;
	__mClass->mMarkFunc = ModPaths_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ModPaths_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ModPaths_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ModPaths_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ModPaths_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ModPaths_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ModPaths_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_216_boot)
HXDLIN( 216)		currentLevel = ::Paths_obj::currentLevel;
            	}
{
            	HX_STACKFRAME(&_hx_pos_83ae5369c3913d5a_231_boot)
HXDLIN( 231)		SOUND_EXT = HX_("ogg",4f,94,54,00);
            	}
}

