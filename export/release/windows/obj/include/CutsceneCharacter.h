// Generated by Haxe 4.2.1+bf9ff69
#ifndef INCLUDED_CutsceneCharacter
#define INCLUDED_CutsceneCharacter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_animate_FlxSymbol
#include <animate/FlxSymbol.h>
#endif
HX_DECLARE_CLASS0(CutsceneCharacter)
HX_DECLARE_CLASS1(animate,FlxSymbol)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,_hx_system,FlxSound)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)



class HXCPP_CLASS_ATTRIBUTES CutsceneCharacter_obj : public  ::animate::FlxSymbol_obj
{
	public:
		typedef  ::animate::FlxSymbol_obj super;
		typedef CutsceneCharacter_obj OBJ_;
		CutsceneCharacter_obj();

	public:
		enum { _hx_ClassId = 0x7ffaedcb };

		void __construct(Float x,Float y,::String anim);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CutsceneCharacter")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CutsceneCharacter"); }
		static ::hx::ObjectPtr< CutsceneCharacter_obj > __new(Float x,Float y,::String anim);
		static ::hx::ObjectPtr< CutsceneCharacter_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String anim);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CutsceneCharacter_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CutsceneCharacter",9f,7d,42,4f); }

		 ::haxe::ds::IntMap nestedShit;
		Float frameTickTypeShit;
		bool playingAnim;
		 ::flixel::_hx_system::FlxSound startSyncAudio;
		bool startedPlayingSound;
		void draw();

		void update(Float elapsed);

};


#endif /* INCLUDED_CutsceneCharacter */ 
