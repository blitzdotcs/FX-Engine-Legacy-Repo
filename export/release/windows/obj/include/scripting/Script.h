// Generated by Haxe 4.3.1
#ifndef INCLUDED_scripting_Script
#define INCLUDED_scripting_Script

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(scripting,Script)

namespace scripting{


class HXCPP_CLASS_ATTRIBUTES Script_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Script_obj OBJ_;
		Script_obj();

	public:
		enum { _hx_ClassId = 0x7fa110a2 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="scripting.Script")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"scripting.Script"); }

		inline static ::hx::ObjectPtr< Script_obj > __new() {
			::hx::ObjectPtr< Script_obj > __this = new Script_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Script_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Script_obj *__this = (Script_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Script_obj), false, "scripting.Script"));
			*(void **)__this = Script_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Script_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Script",2b,c2,f4,7b); }

		static void onCreate();
		static ::Dynamic onCreate_dyn();

		static void onUpdate();
		static ::Dynamic onUpdate_dyn();

		static void onNoteHit();
		static ::Dynamic onNoteHit_dyn();

		static void onNoteMiss();
		static ::Dynamic onNoteMiss_dyn();

		static void onPlayerDeath();
		static ::Dynamic onPlayerDeath_dyn();

};

} // end namespace scripting

#endif /* INCLUDED_scripting_Script */ 
