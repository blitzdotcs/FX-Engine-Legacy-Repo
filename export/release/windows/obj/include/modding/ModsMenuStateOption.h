// Generated by Haxe 4.3.1
#ifndef INCLUDED_modding_ModsMenuStateOption
#define INCLUDED_modding_ModsMenuStateOption

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS0(Alphabet)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(modding,ModIcon)
HX_DECLARE_CLASS1(modding,ModsMenuStateOption)

namespace modding{


class HXCPP_CLASS_ATTRIBUTES ModsMenuStateOption_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef ModsMenuStateOption_obj OBJ_;
		ModsMenuStateOption_obj();

	public:
		enum { _hx_ClassId = 0x0a6807e2 };

		void __construct(::String __o__Option_Name,::String __o__Option_Value,::hx::Null< int >  __o__Option_Row);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="modding.ModsMenuStateOption")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"modding.ModsMenuStateOption"); }
		static ::hx::ObjectPtr< ModsMenuStateOption_obj > __new(::String __o__Option_Name,::String __o__Option_Value,::hx::Null< int >  __o__Option_Row);
		static ::hx::ObjectPtr< ModsMenuStateOption_obj > __alloc(::hx::Ctx *_hx_ctx,::String __o__Option_Name,::String __o__Option_Value,::hx::Null< int >  __o__Option_Row);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ModsMenuStateOption_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ModsMenuStateOption",76,dc,9e,4d); }

		static  ::flixel::ui::FlxButton enableButton;
		static  ::flixel::ui::FlxButton disableButton;
		 ::Alphabet Alphabet_Text;
		 ::modding::ModIcon Mod_Icon;
		bool Mod_Enabled;
		int Option_Row;
		::String Option_Name;
		::String Option_Value;
		void update(Float elapsed);

};

} // end namespace modding

#endif /* INCLUDED_modding_ModsMenuStateOption */ 
